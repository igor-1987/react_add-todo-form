{"version":3,"sources":["api/users.ts","helpers.tsx","components/TodoForm/TodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getTodoId","todos","Math","max","map","todo","getUserById","userId","users","find","user","TodoForm","addNewTodo","useState","title","setTitle","setUserId","hasTitleError","setHasTitleError","hasUserIdError","setUserIdError","method","onSubmit","event","preventDefault","trimTitle","trim","className","type","value","onChange","target","disabled","usersFromServer","UserInfo","href","TodoInfo","completed","classNames","TodoList","todosWithUser","App","setTodos","todoTitle","todoUserId","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2efa252.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { TodoWithUser, User } from './react-app-env';\n\nexport const getTodoId = (todos: TodoWithUser[]) => {\n  const id = Math.max(...todos.map(todo => todo.id));\n\n  return id + 1;\n};\n\nexport const getUserById = (userId: number, users: User[]) => {\n  const foundUser = users.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n","import { useState } from 'react';\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  addNewTodo: (title: string, todoUserId: number) => void\n};\n\nexport const TodoForm: React.FC<Props> = ({ addNewTodo }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserIdError, setUserIdError] = useState(false);\n\n  const resetForm = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const onSubmitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const trimTitle = title.trim();\n\n    setHasTitleError(!trimTitle);\n    setUserIdError(!userId);\n\n    if (!trimTitle || !userId) {\n      return;\n    }\n\n    if (!hasTitleError && !hasUserIdError) {\n      addNewTodo(title, userId);\n      resetForm();\n    }\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserIdError(false);\n  };\n\n  return (\n    <form\n      method=\"POST\"\n      onSubmit={onSubmitForm}\n    >\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={title}\n          onChange={handleInput}\n        />\n\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleSelect}\n        >\n          <option\n            value=\"0\"\n            disabled\n          >\n            Choose a user\n          </option>\n\n          {usersFromServer.map(user => (\n            <option\n              value={user.id}\n              key={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import { User } from '../../react-app-env';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (user && (\n    <a\n      href={`mailto:${email}`}\n      className=\"UserInfo\"\n    >\n      {name}\n    </a>\n  ));\n};\n","import classNames from 'classnames';\nimport { TodoWithUser } from '../../react-app-env';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodoWithUser,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    user,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={`${id}`}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      { user && <UserInfo user={user} /> }\n    </article>\n  );\n};\n","import { TodoWithUser } from '../../react-app-env';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoWithUser } from './react-app-env';\nimport { getTodoId, getUserById } from './helpers';\nimport { TodoForm } from './components/TodoForm';\nimport { TodoList } from './components/TodoList';\nimport './App.scss';\n\nconst todosWithUser: TodoWithUser[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId, usersFromServer),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<TodoWithUser[]>(todosWithUser);\n\n  const addNewTodo = (todoTitle: string, todoUserId: number) => {\n    const newTodo: TodoWithUser = {\n      id: getTodoId(todos),\n      title: todoTitle,\n      completed: false,\n      userId: todoUserId,\n      user: getUserById(todoUserId, usersFromServer),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm addNewTodo={addNewTodo} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}